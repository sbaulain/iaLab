@startuml
Ia <-up- Lab
Qlearn <-down- Lab
AStar <-down- Lab
Node -left-> AStar

class Ia {
  lab : Labyrinthe
  getLabytinthe():Labyrinthe
  setLabytinthe(Labyrinthe)
  resolveIA(Labyrinthe,int)
}


class Lab {
  coutMatrice : Array
  getCoutMatrice():Array
  setCoutMatrice()
  makeMat():Array
}



class Qlearn {
  q : Array
  r : Array
  conv : List
  gamma : List
  get_r():Array
  set_r(Array)
  getQ():Array
  testQ()
  setQinit()
  setgamma(int)
  traceChemin(int)
  testQGammas(Labyrinthe,int)
  first(int,Array,Array,int):Array,int
  keepGoing(Array,Array):Bool
}


class AStar {
  list_nodes : List
  setListNodes(Labyrinthe,int)
  a_star_search(Labyrinthe,int,Array)
  set_heuristic_perfect(List,n)
  set_heuristic_biaised(List,n)
  set_heuristic_len(List,n)
  getBestChild(List,int) 
  checkFrontier(int):String
}
